{{> navbar}}

<div id="page-content">

  <div class="container" id="card_container">


  </div>

</div>
<script src="js/jquery.touchSwipe.js"></script>
<script>
	var queueJSON = JSON.parse('{{{queue_string}}}');
	var candidatesJSON = JSON.parse('{{{candidates_string}}}');
	var removedJSON = [];
	var swipeCardIndex = {{numberSwipeCards}};
</script>
<script src="js/compose.js"></script>
<script src="js/swipe.js"></script>
<script src="js/shake.js"></script>
<script src="http://cloud.github.com/downloads/wycats/handlebars.js/handlebars-1.0.0.beta.6.js"></script>

<div id="send-message-template" class="hidden">

</div>

<div id="queue-card-template" class="hidden">
	{{> queue-card}}
</div>

<div id="card-template" class="hidden">
	{{> swipe-card}}
</div>

<!-- If statement necessary to allow non-alternate routes to omit
	isAlternateView without breaking swipe.js -->
<div id="alternate-view-toggle"
data={{#if isAlternateView}}"true"{{else}}"false"{{/if}}></div>

{{>profile-modal}}

<script>

  window.fbAsyncInit = function() {
    FB.init({
      appId      : '1377497889172999',
      status     : true, // check login status
      cookie     : true, // enable cookies to allow the server to access the session
      xfbml      : true  // parse XFBML
    });
 
    // Here we subscribe to the auth.authResponseChange JavaScript event. This event is fired
    // for any authentication related change, such as login, logout or session refresh. This means that
    // whenever someone who was previously logged out tries to log in again, the correct case below
    // will be handled.
    FB.Event.subscribe('auth.authResponseChange', function(response) {
      console.log('Got authResponseChange');
      // Here we specify what we do with the response anytime this event occurs.
      if (response.status === 'connected') {
        // The response object is returned with a status field that lets the app know the current
        // login status of the person. In this case, we're handling the situation where they
        // have logged in to the app.

        // Save their facebook session to db
        saveUserData(response.authResponse.accessToken);

        // TODO: response.redirect('www.google.com');
      } else if (response.status === 'not_authorized') {
        // In this case, the person is logged into Facebook, but not into the app, so we call
        // FB.login() to prompt them to do so.
        // In real-life usage, you wouldn't want to immediately prompt someone to login
        // like this, for two reasons:
        // (1) JavaScript created popup windows are blocked by most browsers unless they
        // result from direct interaction from people using the app (such as a mouse click)
        // (2) it is a bad experience to be continually prompted to login upon page load
        window.location.href = '/login'; // Go straight to homepage

      } else {
        // In this case, the person is not logged into Facebook, so we call the login()
        // function to prompt them to do so. Note that at this stage there is no indication
        // of whether they are logged into the app. If they aren't then they'll see the Login
        // dialog right after they log in to Facebook.
        // The same caveats as above apply to the FB.login() call here.
        window.location.href = '/login'; // Go straight to homepage
      }
    });
  };

  // Load the SDK asynchronously
  (function(d){
   var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
   if (d.getElementById(id)) {return;}
   js = d.createElement('script'); js.id = id; js.async = true;
   js.src = "//connect.facebook.net/en_US/all.js";
   ref.parentNode.insertBefore(js, ref);
  }(document));

  // Here we run a very simple test of the Graph API after login is successful.
  // This testAPI() function is only called in those cases.
  function saveUserData(authToken) {
    console.log(authToken);
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {

      heap.identify({
              name: response.name,
              id: response.id
            });

      console.log('Good to see you, ' + response.name + '.');
      $.post('/saveUser', {id: response.id, name: response.name, authToken: authToken}, function(data) {
        console.log("Done saving FB auth session");
      });
    });
  }

</script>